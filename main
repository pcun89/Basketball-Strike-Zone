import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

def main():
    # Step 1: Load dataset
    data = pd.read_csv("pitches.csv")

    # Step 2: Clean and preprocess
    data = data.dropna(subset=['plate_x', 'plate_z', 'description'])
    data['label'] = data['description'].apply(lambda x: 1 if x == 'S' else 0)

    # Step 3: Select features and target
    X = data[['plate_x', 'plate_z']]
    y = data['label']

    # Step 4: Train/test split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Step 5: Train SVM model
    model = SVC(kernel='rbf', gamma=3, C=1)
    model.fit(X_train, y_train)

    # Step 6: Evaluate
    y_pred = model.predict(X_test)
    print("Accuracy:", accuracy_score(y_test, y_pred))

    # Step 7: Visualization of decision boundary
    plt.figure(figsize=(8,6))
    sns.scatterplot(x="plate_x", y="plate_z", hue="label", data=data, alpha=0.6)

    # Create mesh grid for decision boundary
    x_min, x_max = X['plate_x'].min() - 1, X['plate_x'].max() + 1
    z_min, z_max = X['plate_z'].min() - 1, X['plate_z'].max() + 1
    xx, zz = np.meshgrid(np.linspace(x_min, x_max, 500),
                         np.linspace(z_min, z_max, 500))

    preds = model.predict(np.c_[xx.ravel(), zz.ravel()])
    preds = preds.reshape(xx.shape)
    plt.contourf(xx, zz, preds, alpha=0.3, cmap="coolwarm")

    plt.title("SVM Strike Zone Classifier")
    plt.show()

if __name__ == "__main__":
    main()
